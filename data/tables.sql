-- SQLBook: Code

-- lorsque l'on exécuter du code SQL, il se peut que certaines parties plantes. BEGIN / COMMIT nous permet d'englober tout notre SQL à executer et en cas d'erreur d'annuler toutes les actions qui sont dedans.

BEGIN;

DROP TABLE
    IF EXISTS "clients",
    "dates",
    "offers",
    "services",
    "enterprises"
      CASCADE;



CREATE TABLE
    IF NOT EXISTS "enterprises" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "name" TEXT NOT NULL,
        "address" TEXT NOT NULL,
        "logo" TEXT,
        "description" TEXT
    );
CREATE TABLE
    IF NOT EXISTS "clients" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "firstname" TEXT NOT NULL,
        "lastname" TEXT NOT NULL,
        "mail" TEXT NOT NULL,
        "tel" INT,
        "offer_is_available" BOOLEAN NOT NULL
    );
    CREATE TABLE
    IF NOT EXISTS "services" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "name" TEXT NOT NULL,
        "description" TEXT NOT NULL,
        "price" INT NOT NULL,
        "enterprise_id" INTEGER  REFERENCES "enterprises"("id") ON DELETE CASCADE
    );



CREATE TABLE
    IF NOT EXISTS "offers" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "sales_before_offer" INT,
        "description" TEXT NOT NULL,
        "réduction" INT

    );


        CREATE TABLE
    IF NOT EXISTS "dates" (
        "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        "day" TEXT NOT NULL,
        "time" TEXT NOT NULL,     
        "client_id" INTEGER  REFERENCES "clients"("id") ON DELETE CASCADE,
        "service_id" INTEGER  REFERENCES "services"("id") ON DELETE CASCADE,
        "offer_id" INTEGER  REFERENCES "offers"("id") ON DELETE CASCADE
    );
    --  doit referencer l'entreprise 







-- ALTER TABLE CLIENT ADD  (code_utilisateur) REFERENCES UTILISATEUR (code_utilisateur);

-- ALTER TABLE ENTREPRISE ADD  (code_utilisateur) REFERENCES UTILISATEUR (code_utilisateur);

-- ALTER TABLE PRESTATION ADD  (code_entreprise) REFERENCES ENTREPRISE (code_entreprise);

-- ALTER TABLE PRESTATION ADD  (code_offre) REFERENCES OFFRE (code_offre);

-- ALTER TABLE RDV ADD  (code_produit) REFERENCES PRESTATION (code_produit);

-- ALTER TABLE ACHÈTE ADD  (code_client) REFERENCES CLIENT (code_client);

-- ALTER TABLE ACHÈTE ADD  (code_produit) REFERENCES PRESTATION (code_produit);

----------------------------------------------------------------

-- CREATE TABLE IF NOT EXISTS "client"(

--   "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

--   "name" TEXT,

--   "length" TEXT,

--   "core_id" INTEGER REFERENCES "core"("id") ON DELETE CASCADE,

--   "wood_id" INTEGER REFERENCES "wood"("id") ON DELETE CASCADE,

--   "user_id" INTEGER  REFERENCES "user"("id") ON DELETE CASCADE,

--   "created_at" TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP, -- on peut également utiliser NOW()

--   "updated_at" TIMESTAMPTZ

-- );

COMMIT;